---
- name: Deploy AWS stack
  hosts: localhost
  vars:
    controller_components:
      - job_launch

    controller_launch_jobs:
      - name: Deploy Cloud Stack in AWS
        wait: true
        extra_vars:
          aws_region: "us-east-2"
          aws_owner_tag: "gitlab"
          vm_environment: "infrastructure"
          aws_public_key: "{{ gitlab_ssh_public_key }}"
          email: "git@gitlab.exmaple.com"

      - name: Cloud / AWS / Create VM
        wait: true
        extra_vars:
          aws_region: "us-east-2"
          vm_name: gitlab
          vm_owner: "gitlab"
          vm_deployment: "gitlab"
          vm_environment: "infrastructure"
          vm_blueprint: "rhel9"
          aws_vpc_subnet_name: "aws-test-subnet"
          aws_securitygroup_name: "aws-test-sg"
    
      - name: Cloud / AWS / Create VM
        wait: true
        extra_vars:
          aws_region: "us-east-2"
          vm_name: gitlab-runner
          vm_owner: "gitlab"
          vm_deployment: "gitlab"
          vm_environment: "infrastructure"
          vm_blueprint: "rhel9"
          aws_vpc_subnet_name: "aws-test-subnet"
          aws_securitygroup_name: "aws-test-sg"

  tasks:
    - name: Demo Components
      ansible.builtin.include_role:
        name: "redhat_cop.controller_configuration.{{ item }}"
      loop: "{{ controller_components }}"
      when:
        - controller_components | d("") | length > 0


- name: GitLab application deployment
  hosts: gitlab
  vars:
  tasks:
    - name: Configure certificates
      ansible.builtin.include_role:
        name: "demo.cloud.certbot53"

    - name: Configure gitlab
      ansible.builtin.include_role:
        name: "demo.cloud.gitlab"

