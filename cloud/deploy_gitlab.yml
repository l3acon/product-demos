---
- name: Deploy GitLab
  gather_facts: false
  hosts: "{{ gitlab_host_name | default('gitlab') }}"
  vars:
    cb53_hostname: "gitlab"
    cb53_cert_dir: "/root/cb53_certs/"
  tasks:
    - name: Wait for host to be listening for SSH connections
      ansible.builtin.wait_for:
        port: 22
        host: "{{ hostvars[ansible_host]['ansible_ssh_host']|default(ansible_host)|default(inventory_hostname) }}"
        search_regex: OpenSSH
        delay: 10
      delegate_to: localhost

    - name: Run setup
      ansible.builtin.setup:

    - name: Install package depends
      become: true
      ansible.builtin.package:
        name: ['python3-cryptography', 'python3-pip']
        state: present

    - name: Install python depends
      become: true
      ansible.builtin.pip:
        name: ['boto3', 'botocore']
        state: present

    - name: Query route53 for all hosted zones
      amazon.aws.route53_info:
        query: hosted_zone
      register: r53
      delegate_to: localhost

    - name: Set certbot53 hosted zone
      ansible.builtin.set_fact:
        cb53_route53_zone: "{{ r53.HostedZones[0].Name[:-1] }}"

    - name: Set gitlab public ipv4 address
      ansible.builtin.set_fact:
        gitlab_public_ipv4_address: "{{ public_ip }}"
      when: public_ip is ansible.utils.ipv4

    - name: Set gitlab public ipv4 address
      ansible.builtin.set_fact:
        gitlab_public_ipv4_address: "{{ ansible_host }}"
      when: 
        - ansible_host is defined
        - ansible_host is ansible.utils.ipv4

    - name: debug
      ansible.builtin.debug:
        msg: "domain: {{ cb53_hostname }} in route53 Hosted Zone: {{ cb53_route53_zone }}"

    - name: Create A record entry for Gitlab
      amazon.aws.route53:
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') | default(aws_access_key) }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') | default(aws_secret_key) }}"
        zone: "{{ cb53_route53_zone }}"
        record: "gitlab.{{ cb53_route53_zone }}"
        type: A
        ttl: 60
        state: present
        wait: false
        value: "{{ gitlab_public_ipv4_address }}"
        overwrite: true

    - name: Create certificate directory
      ansible.builtin.file:
        path: "{{ cb53_cert_dir }}"
        state: directory
        mode: '0700'
      become: true

    - name: Configure certificates (sanity)
      ansible.builtin.include_role:
        name: "demo.cloud.certbot53"
        apply:
          become: true
      vars:
        acme_env: staging

    - name: Configure certificates (for real)
      ansible.builtin.include_role:
        name: "demo.cloud.certbot53"
        apply:
          become: true
      vars:
        acme_env: production
        acme_directory: "https://acme-v02.api.letsencrypt.org/directory"

    - name: Configure GitLab
      vars:
        gitlab_ssl_certificate: "{{ certbot53_public_path }}"
        gitlab_ssl_certificate_key: "{{ certbot53_private_path }}"
        gitlab_registry_nginx_ssl_certificate: "{{ certbot53_public_path }}"
        gitlab_registry_nginx_ssl_certificate_key: "{{ certbot53_private_path }}"
      ansible.builtin.include_role:
        name: "demo.cloud.gitlab"
        apply:
          become: true
